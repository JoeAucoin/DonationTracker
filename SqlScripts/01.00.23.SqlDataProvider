

ALTER TABLE  [dbo].[GIBS_DonationTracker]
 ADD PledgeID int

 GO

ALTER TABLE [dbo].[GIBS_DonationTracker_Merged]
 ADD PledgeID int


 /****** Object:  Table [dbo].[GIBS_DonationTrackerPledge]    Script Date: 01/26/2016 06:43:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[GIBS_DonationTrackerPledge](
	[ModuleID] [int] NOT NULL,
	[PledgeID] [int] IDENTITY(1,1) NOT NULL,
	[UserID] [int] NOT NULL,
	[DriveID] [int] NULL,
	[StartDate] [date] NULL,
	[EndDate] [date] NULL,
	[PledgeAmount] [money] NULL,
	[Frequency] [varchar](8) NULL,
	[Followup] [bit] NULL,
	[Notes] [ntext] NULL,
	[CreatedByUserID] [int] NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[UpdatedByUserID] [int] NOT NULL,
	[UpdatedDate] [datetime] NOT NULL,
 CONSTRAINT [PK_GIBS_DonationTrackerPledge] PRIMARY KEY CLUSTERED 
(
	[PledgeID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[GIBS_DonationTrackerPledge]  WITH NOCHECK ADD  CONSTRAINT [FK_GIBS_DonationTrackerPledge_Modules] FOREIGN KEY([ModuleID])
REFERENCES [dbo].[Modules] ([ModuleID])
ON DELETE CASCADE
NOT FOR REPLICATION 
GO

ALTER TABLE [dbo].[GIBS_DonationTrackerPledge] CHECK CONSTRAINT [FK_GIBS_DonationTrackerPledge_Modules]
GO




/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerAddDonation]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerAddDonation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerAddDonation]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerGetDonation]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerGetDonation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerGetDonation]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerGetUserDonations]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerGetUserDonations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerGetUserDonations]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledge_GetPledgeScheduleByUserID]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerPledge_GetPledgeScheduleByUserID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerPledge_GetPledgeScheduleByUserID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeAdd]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerPledgeAdd]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerPledgeAdd]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeGetPledgeByID]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerPledgeGetPledgeByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerPledgeGetPledgeByID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeGetPledgesByUserID]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerPledgeGetPledgesByUserID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerPledgeGetPledgesByUserID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeUpdate]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerPledgeUpdate]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerPledgeUpdate]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerUpdateDonation]    Script Date: 01/26/2016 06:46:58 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTrackerUpdateDonation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_DonationTrackerUpdateDonation]
GO



/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerAddDonation]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_DonationTrackerAddDonation]

	@ModuleId       int,
	@DonationUserID         int,
	@DriveID         int,
	@DonationDate	datetime,
	@DonationAmount money,
	@DonationType varchar(100),
	@Followup 	bit,
	@DonationNotes		ntext,
	@UserId	int,
	@PledgeID int
	
	

as

insert into GIBS_DonationTracker (
	ModuleID, 
	UserID, 
	DriveID, 
	DonationDate, 
	DonationAmount, 
	DonationType, 
	Followup, 
	Notes, 
	CreatedByUser, 
	CreatedDate,
	PledgeID
) 
values (
	@ModuleId,
	@DonationUserID,
	@DriveID,
	@DonationDate,
	@DonationAmount,
	@DonationType,
	@Followup,
	@DonationNotes,
	@UserId,
	getdate(),
	@PledgeID
)
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerGetDonation]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_DonationTrackerGetDonation]

	@ModuleId int,
    @DonationID int

as

SELECT     GIBS_DonationTracker.ModuleID, GIBS_DonationTracker.DonationID, GIBS_DonationTracker.UserID AS DonationUserID, GIBS_DonationTracker.DriveID, 
                      GIBS_DonationTracker.DonationDate, GIBS_DonationTracker.DonationAmount, GIBS_DonationTracker.DonationType, GIBS_DonationTracker.Followup, 
                      GIBS_DonationTracker.Notes as DonationNotes, GIBS_DonationTracker.CreatedByUser, GIBS_DonationTracker.CreatedDate, 
					  GIBS_DonationTrackerDrives.DriveName, GIBS_DonationTrackerDrives.[Description],
                      'CreatedByUserName' = CU.FirstName + ' ' + CU.LastName,
                      'DonationUserName' = DU.FirstName + ' ' + DU.LastName,
					  DU.FirstName, DU.LastName
					  ,PledgeID
FROM         GIBS_DonationTracker 

left outer JOIN
                      Users DU ON GIBS_DonationTracker.UserID = DU.UserID  
left outer JOIN
                      Users CU ON GIBS_DonationTracker.CreatedByUser = CU.UserID                       
                      
                      
                      
                      INNER JOIN
                      GIBS_DonationTrackerDrives ON GIBS_DonationTracker.DriveID = GIBS_DonationTrackerDrives.DriveID
WHERE     (GIBS_DonationTracker.ModuleID = @ModuleId) 
AND (GIBS_DonationTracker.DonationID = @DonationID)
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerGetUserDonations]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/** Create Stored Procedures **/


CREATE procedure [dbo].[GIBS_DonationTrackerGetUserDonations]

	@ModuleId int,
	@DonationUserID int

as

SELECT     GIBS_DonationTracker.ModuleID, GIBS_DonationTracker.DonationID, GIBS_DonationTracker.UserID, GIBS_DonationTracker.DriveID, 
                      GIBS_DonationTracker.DonationDate, GIBS_DonationTracker.DonationAmount, GIBS_DonationTracker.DonationType, GIBS_DonationTracker.Followup, 
                      GIBS_DonationTracker.Notes as DonationNotes, GIBS_DonationTracker.CreatedByUser, GIBS_DonationTracker.CreatedDate, GIBS_DonationTrackerDrives.DriveName,
                      'CreatedByUserName' = CU.FirstName + ' ' + CU.LastName,
                      'DonationUserName' = DU.FirstName + ' ' + DU.LastName
FROM         GIBS_DonationTracker 

left outer JOIN
                      Users DU ON GIBS_DonationTracker.UserID = DU.UserID  
left outer JOIN
                      Users CU ON GIBS_DonationTracker.CreatedByUser = CU.UserID                       
                      
                      
                      
                      INNER JOIN
                      GIBS_DonationTrackerDrives ON GIBS_DonationTracker.DriveID = GIBS_DonationTrackerDrives.DriveID
WHERE     (GIBS_DonationTracker.ModuleID = @ModuleId) 
AND (GIBS_DonationTracker.UserID = @DonationUserID) 
ORDER BY DonationDate DESC
GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledge_GetPledgeScheduleByUserID]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/** Create Stored Procedures **/


CREATE procedure [dbo].[GIBS_DonationTrackerPledge_GetPledgeScheduleByUserID]

--	@ModuleId int,
	@DonationUserID int


as

Declare @StartDate Date;
Declare @EndDate Date;
Declare @Frequency  varchar(8);
Declare @PledgeID int = null;
Declare @DriveID int;

--select top 1 PledgeID, StartDate, EndDate, Frequency,  PledgeAmount from GIBS_DonationTrackerPledge  
--where UserID = @DonationUserID



select top 1   @StartDate = StartDate, @EndDate = EndDate, @Frequency = Frequency, @PledgeID = PledgeID, @DriveID = DriveID from GIBS_DonationTrackerPledge 
WHERE UserID = @DonationUserID 
Order by PledgeID desc;


if @PledgeID is null
	--there is no record
	SET @Frequency = '';
Else
	--there is an orderID so I can use that value to query ORDERS table
	BEGIN
		SELECT  ItemID = ROW_NUMBER() OVER (ORDER BY PledgeDate asc), a.PledgeID, PledgeDate, 
		DonationDate, COALESCE(DonationAmount,0) AS  DonationAmount,
		DriveName = (SELECT [DriveName] FROM [dbo].[GIBS_DonationTrackerDrives] where [DriveID] = @DriveID) FROM [GIBS_DonationTracker_GetDateRange]( @Frequency, @StartDate, @EndDate, @PledgeID) as a
 LEFT JOIN GIBS_DonationTracker as b on a.PledgeDate = b.DonationDate AND a.PledgeID = b.PledgeID 
	END











GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeAdd]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create procedure [dbo].[GIBS_DonationTrackerPledgeAdd]

	@ModuleId       int,
	@DonationUserID         int,
	@DriveID         int,
	@StartDate	datetime,
	@EndDate	datetime,
	@PledgeAmount money,
	@Frequency varchar(8),
	@Followup 	bit,
	@Notes		ntext,
	@UserId	int
	
	

as

insert into GIBS_DonationTrackerPledge 
           ([ModuleID]
           ,[UserID]
           ,[DriveID]
           ,[StartDate]
           ,[EndDate]
           ,[PledgeAmount]
           ,[Frequency]
           ,[Followup]
           ,[Notes]
           ,[CreatedByUserID]
           ,[CreatedDate]
           ,[UpdatedByUserID]
           ,[UpdatedDate])
values (
	@ModuleId,
	@DonationUserID,
	@DriveID,
	@StartDate,
	@EndDate,
	
	@PledgeAmount,
	@Frequency,
	
	@Followup,
	@Notes,
	@UserId,
	getdate(),
	@UserId,
	getdate()
)

GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeGetPledgeByID]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_DonationTrackerPledgeGetPledgeByID]


    @PledgeID int

as

SELECT        GIBS_DonationTrackerPledge.DriveID, GIBS_DonationTrackerPledge.StartDate, GIBS_DonationTrackerPledge.EndDate, GIBS_DonationTrackerPledge.PledgeAmount, GIBS_DonationTrackerPledge.Frequency, 
                         GIBS_DonationTrackerPledge.Followup, GIBS_DonationTrackerPledge.Notes, GIBS_DonationTrackerPledge.CreatedByUserID, GIBS_DonationTrackerPledge.CreatedDate, 
                         GIBS_DonationTrackerPledge.UpdatedByUserID, GIBS_DonationTrackerPledge.UpdatedDate, GIBS_DonationTrackerDrives.DriveName, GIBS_DonationTrackerPledge.UserID
						 ,'CreatedByUserName' = CU.FirstName + ' ' + CU.LastName,
                    'UpdatedByUserName' = UU.FirstName + ' ' + UU.LastName
FROM            GIBS_DonationTrackerPledge INNER JOIN
                         GIBS_DonationTrackerDrives ON GIBS_DonationTrackerPledge.DriveID = GIBS_DonationTrackerDrives.DriveID


left outer JOIN
                      Users UU ON GIBS_DonationTrackerPledge.UpdatedByUserID = UU.UserID  
left outer JOIN
                      Users CU ON GIBS_DonationTrackerPledge.CreatedByUserID = CU.UserID  

where  GIBS_DonationTrackerPledge.PledgeID = @PledgeID


GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeGetPledgesByUserID]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_DonationTrackerPledgeGetPledgesByUserID]

	@ModuleID int,
    @DonationUserID int

as

SELECT      GIBS_DonationTrackerPledge.PledgeID, GIBS_DonationTrackerPledge.UserID, GIBS_DonationTrackerPledge.DriveID, GIBS_DonationTrackerPledge.StartDate, GIBS_DonationTrackerPledge.EndDate, GIBS_DonationTrackerPledge.PledgeAmount, GIBS_DonationTrackerPledge.Frequency, 
                         GIBS_DonationTrackerPledge.Followup, GIBS_DonationTrackerPledge.Notes, GIBS_DonationTrackerPledge.CreatedByUserID, GIBS_DonationTrackerPledge.CreatedDate, 
                         GIBS_DonationTrackerPledge.UpdatedByUserID, GIBS_DonationTrackerPledge.UpdatedDate, GIBS_DonationTrackerDrives.DriveName, GIBS_DonationTrackerPledge.UserID
						 ,'CreatedByUserName' = CU.FirstName + ' ' + CU.LastName,
                    'UpdatedByUserName' = UU.FirstName + ' ' + UU.LastName
FROM            GIBS_DonationTrackerPledge INNER JOIN
                         GIBS_DonationTrackerDrives ON GIBS_DonationTrackerPledge.DriveID = GIBS_DonationTrackerDrives.DriveID


left outer JOIN
                      Users UU ON GIBS_DonationTrackerPledge.UpdatedByUserID = UU.UserID  
left outer JOIN
                      Users CU ON GIBS_DonationTrackerPledge.CreatedByUserID = CU.UserID  

where (GIBS_DonationTrackerPledge.ModuleID = @ModuleID) AND (GIBS_DonationTrackerPledge.UserID = @DonationUserID)
 ORDER BY PledgeID desc


GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerPledgeUpdate]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



create procedure [dbo].[GIBS_DonationTrackerPledgeUpdate]

	
	@PledgeID         int,
	@DriveID         int,
	@StartDate	datetime,
	@EndDate	datetime,
	@PledgeAmount money,
	@Frequency varchar(8),
	@Followup 	bit,
	@Notes		ntext,
	@UserId	int
	
	

as


UPDATE [dbo].[GIBS_DonationTrackerPledge]
   SET 
      [DriveID] = @DriveID
      ,[StartDate] = @StartDate
      ,[EndDate] = @EndDate
      ,[PledgeAmount] = @PledgeAmount
      ,[Frequency] = @Frequency
      ,[Followup] = @Followup
      ,[Notes] = @Notes
      ,[UpdatedByUserID] = @UserId
      ,[UpdatedDate] = getdate()
 WHERE PledgeID = @PledgeID



GO

/****** Object:  StoredProcedure [dbo].[GIBS_DonationTrackerUpdateDonation]    Script Date: 01/26/2016 06:46:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_DonationTrackerUpdateDonation]

	@ModuleId       int,
	@DonationID         int,
	@DriveID         int,
	@DonationDate	datetime,
	@DonationAmount money,
	@DonationType varchar(100),
	@Followup 	bit,
	@DonationNotes		ntext,
	@PledgeID int

as

update GIBS_DonationTracker
set    DriveID       = @DriveID,
		DonationDate = @DonationDate,
		DonationAmount = @DonationAmount,
		DonationType = @DonationType,
		Followup = @Followup,
		Notes = @DonationNotes,
		PledgeID = @PledgeID
		
where  ModuleId = @ModuleId
and    DonationID = @DonationID
GO




/****** Object:  UserDefinedFunction [dbo].[GIBS_DonationTracker_GetDateRange]    Script Date: 01/26/2016 06:48:53 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_DonationTracker_GetDateRange]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GIBS_DonationTracker_GetDateRange]
GO



/****** Object:  UserDefinedFunction [dbo].[GIBS_DonationTracker_GetDateRange]    Script Date: 01/26/2016 06:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GIBS_DonationTracker_GetDateRange]
(     
      @Increment              CHAR(1),
      @StartDate              DATETIME,
      @EndDate                DATETIME,
	  @PledgeID	int
)
RETURNS  
@SelectedRange    TABLE 
(PledgeDate DATE, PledgeID int)
AS 
BEGIN
      ;WITH cteRange (DateRange) AS (
            SELECT @StartDate
            UNION ALL
            SELECT 
                  CASE
                        WHEN @Increment = 'd' THEN DATEADD(dd, 1, DateRange)
                        WHEN @Increment = 'w' THEN DATEADD(ww, 1, DateRange)
                        WHEN @Increment = 'm' THEN DATEADD(mm, 1, DateRange)
						WHEN @Increment = 'q' THEN DATEADD(mm, 4, DateRange)
						WHEN @Increment = 'a' THEN DATEADD(mm, 12, DateRange)
                  END
            FROM cteRange
            WHERE DateRange <= 
                  CASE
                        WHEN @Increment = 'd' THEN DATEADD(dd, -1, @EndDate)
                        WHEN @Increment = 'w' THEN DATEADD(ww, -1, @EndDate)
                        WHEN @Increment = 'm' THEN DATEADD(mm, -1, @EndDate)
						WHEN @Increment = 'q' THEN DATEADD(mm, -1, @EndDate)
						WHEN @Increment = 'a' THEN DATEADD(mm, -1, @EndDate)
                  END
				  
				  
				  )
          
      INSERT INTO @SelectedRange (PledgeDate, PledgeID)
      SELECT DateRange,  @PledgeID
      FROM cteRange
      OPTION (MAXRECURSION 3660);
      RETURN
END

GO


